services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: interview_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  local-ai:
    image: quay.io/go-skynet/local-ai:v2.19.0
    container_name: local_ai_service
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./models:/models
      - ./localai_config/models.yaml:/etc/localai/models.yaml
    command: --models-config-file /etc/localai/models.yaml --models-path /models
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python_backend
    restart: unless-stopped
    depends_on:
      - db
      - local-ai
    environment:
      POSTGRES_DB: interview_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      DB_HOST: db
      LOCAL_AI_URL: http://local-ai:8080/v1
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nginx_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./frontend/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/usr/share/nginx/html
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  